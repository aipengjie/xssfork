#! /usr/bin/env python
# coding=utf-8
"""
Copyright (c) 2017 xssfork developers (http://xssfork.codersec.net/)
See the file 'doc/COPYING' for copying permission
"""
import threading
from abstract_observer import AbstractObserver


class XssVulnerability(object):
    xss_status = False
    xss_payloads = list()
    abstract_observers = list()
    number = 0
    thread_lock = threading.Lock()

    @staticmethod
    def notif_all(call_back):
        call_back()
        for abstract_observer in XssVulnerability.abstract_observers[::-1]:
            abstract_observer.notify(XssVulnerability.xss_status, XssVulnerability.xss_payloads)

    @staticmethod
    def add_observer(object):
        XssVulnerability.abstract_observers.append(object)

    @staticmethod
    def add_xss_payload(payload):
        with XssVulnerability.thread_lock:
            XssVulnerability.xss_status = True
            if payload not in XssVulnerability.xss_payloads:
                XssVulnerability.xss_payloads.append(payload)
                XssVulnerability.number += 1
